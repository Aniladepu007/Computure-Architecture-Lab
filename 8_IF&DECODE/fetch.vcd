$date
	Sun Mar 10 00:12:16 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fetch_sim $end
$var wire 16 ! writeout [15:0] $end
$var wire 16 " readout2 [15:0] $end
$var wire 16 # readout1 [15:0] $end
$var reg 1 $ clk $end
$var reg 16 % data [15:0] $end
$var reg 4 & read1 [3:0] $end
$var reg 4 ' read2 [3:0] $end
$var reg 1 ( readEnable $end
$var reg 1 ) reset $end
$var reg 4 * write [3:0] $end
$var reg 1 + writeEnable $end
$scope module obj $end
$var wire 1 $ clk $end
$var wire 16 , data [15:0] $end
$var wire 4 - read1 [3:0] $end
$var wire 4 . read2 [3:0] $end
$var wire 1 ( readEnable $end
$var wire 1 ) reset $end
$var wire 4 / write [3:0] $end
$var wire 1 + writeEnable $end
$var reg 16 0 readout1 [15:0] $end
$var reg 16 1 readout2 [15:0] $end
$var reg 16 2 writeout [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
bx *
1)
x(
bx '
bx &
bx %
0$
bx #
bx "
bx !
$end
#1
1$
#2
0$
b10001111 %
b10001111 ,
0+
1(
b110 *
b110 /
b11 '
b11 .
b10 &
b10 -
0)
#3
b111 !
b111 2
b100 "
b100 1
b11 #
b11 0
1$
#4
0$
#5
1$
#6
0$
#7
b10001111 !
b10001111 2
bz "
bz 1
bz #
bz 0
1$
0(
1+
#8
0$
#9
1$
#10
0$
#11
bx "
bx 1
bx #
bx 0
1$
1(
#12
0$
#13
1$
#14
0$
0+
#15
b100 "
b100 1
b11 #
b11 0
1$
#16
0$
#17
1$
#18
0$
#19
1$
